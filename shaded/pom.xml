<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.scijava</groupId>
		<artifactId>pom-jython-shaded</artifactId>
		<version>2.7.2-SNAPSHOT</version>
	</parent>

	<artifactId>jython-shaded</artifactId>

	<properties>
		<!--
		NB: Skip duplicate class checking. Of course, it would be nice
		to disable only the BanDuplicateClasses rule and nothing else,
		but I do not know how.

		This avoids a big build error starting with:

		[WARNING] Rule 0: org.scijava.maven.plugin.enforcer.BanDuplicateClasses failed with message:
		No Duplicate Classes Allowed! For duplicate transitive dependencies, add dependency exclusions. For duplications between direct dependencies, resolve or add ignored classes to this rule's configuration.

			Found in:
				org.scijava:jython-deps:jar:2.7.0:compile
				org.python:jython-standalone:jar:2.7.0:compile
			Duplicate classes:
				org/python/antlr/ast/ImportFrom$lineno_descriptor.class
				org/python/netty/util/concurrent/SingleThreadEventExecutor$3.class
				org/python/apache/xerces/xs/XSComplexTypeDefinition.class
				org/python/google/common/collect/ImmutableEnumMap$1.class
				org/python/bouncycastle/jcajce/provider/symmetric/Salsa20$Base.class
				org/python/google/common/base/Joiner$MapJoiner.class
				org/python/bouncycastle/jcajce/provider/asymmetric/dh/BCDHPublicKey.class

		These clashes are transient; the whole point of this project is to
		shade the final artifact so that no such clashes exist.
		-->
		<enforcer.skip>true</enforcer.skip>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.python</groupId>
			<artifactId>jython-standalone</artifactId>
			<version>${jython.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>jython-deps</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- NB: The org.scijava:jython-deps artifact contains all of
			     jython-standalone minus the <foo>.py classes, due to a bug in ASM.
			     This purpose of this maven-shade-plugin invocation is only to readd
			     those missing classes back into the jython-shaded artifact. -->
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<configuration>
					<filters>
						<filter>
							<artifact>org.python:jython-standalone</artifact>
							<includes>
								<include>**/*$py.class</include>
							</includes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.python</groupId>
									<artifactId>jython-standalone</artifactId>
									<version>${jython.version}</version>
									<classifier>javadoc</classifier>
									<outputDirectory>${project.build.directory}/</outputDirectory>
									<destFileName>${project.artifactId}-${project.version}-javadoc.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.python</groupId>
									<artifactId>jython-standalone</artifactId>
									<version>${jython.version}</version>
									<classifier>sources</classifier>
									<outputDirectory>${project.build.directory}/</outputDirectory>
									<destFileName>${project.artifactId}-${project.version}-sources.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar</file>
									<type>jar</type>
									<classifier>javadoc</classifier>
								</artifact>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-${project.version}-sources.jar</file>
									<type>jar</type>
									<classifier>sources</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
